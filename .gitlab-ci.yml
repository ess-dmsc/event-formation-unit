workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

default:
  tags:
    - docker
  
stages:
  - build
  - test
  - publish

variables:
  ALMALINUX9_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-almalinux9-conan:1.1.0"
  CENTOS7_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/build-nodes/centos7:1.0"
  UBUNTU2204_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/build-nodes/ubuntu2204:1.0"
  DEBIAN11_IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/build-nodes/debian11:1.0"

# Job template to reduce duplication
.build_template: &build_template
  before_script: 
    - |
      CONAN_PROFILE=linux_x86_64_gcc11

      if [ -f /etc/os-release ]; then
        . /etc/os-release
        if [[ "$ID" == "centos" ]]; then
            CONAN_PROFILE=linux_x86_64_gcc11_legacy
            echo 'source /opt/rh/devtoolset-11/enable' >> ~/.bashrc
            source ~/.bashrc
        fi
      fi

    - conan config install http://github.com/ess-dmsc/conan-configuration.git

    - cmake --version
    - gcc --version
    - g++ --version
    - cppcheck --version
    - git config --global --add safe.directory '*'

build_job:
  <<: *build_template
  parallel: 
    matrix:
      - NAME : "almalinux9"
        CONTAINER_IMAGE: $ALMALINUX9_IMAGE

      - NAME: "centos7"
        CONTAINER_IMAGE: $CENTOS7_IMAGE

      - NAME: "ubuntu2204"
        CONTAINER_IMAGE: $UBUNTU2204_IMAGE

  stage: build
  image: $CONTAINER_IMAGE
  cache:
    key: "$CI_COMMIT_SHA-$CONTAINER_IMAGE"
    paths:
      - build/
  artifacts:
    paths:
      - build/bin
      - build/generators
      - build/lib
      - build/licenses
      - build/CONAN_INFO
    expire_in: 1 day
  script:
    - echo "Running on $NAME"

    - mkdir -p build
    - cd build

    # Check if build artifacts already exist
    - |
      if [ "$(ls -A build/bin 2>/dev/null)" ]; then
        echo "Build artifacts found, skipping build."
      else
        echo "No build artifacts found, proceeding to build."

        echo "Installing dependencies"

        conan install --build=missing .. --profile=$CONAN_PROFILE

        conan info ../conanfile.txt > CONAN_INFO

        echo "Configuring with CMake"
        cmake -DCONAN=MANUAL -DGOOGLE_BENCHMARK=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_SKIP_BUILD_RPATH=ON ..

        echo "Building project"
        make -j$(nproc) all
        make
      fi

clangformat_test_job:
  stage: test
  image: $DEBIAN11_IMAGE
  before_script:
    - export HTTP_PROXY="http://172.20.72.11:8888"
    - export HTTPS_PROXY="http://172.20.72.11:8888"
    - export NO_PROXY="localhost,127.0.0.1"
  variables:
    TEST_OUTPUT: cppcheck.xml
  script:
    - |
      cppcheck -j$(nproc) \
        -v `./cppcheck_exclude_tests.sh src` \
        --platform=unix64 \
        --force \
        --enable=all \
        -I ./src \
        '--template={file},{line},{severity},{id},{message}' \
        --xml --xml-version=2 \
        ./src --output-file=$TEST_OUTPUT
  artifacts:
    reports:
      codequality: $TEST_OUTPUT
    paths:
      - $TEST_OUTPUT 

unit_test_job:
  stage: test
  image: $CENTOS7_IMAGE
  <<: *build_template
  script:
    - mkdir -p build
    - cd build

    - echo "Installing dependencies"
    - conan install --build=missing .. --profile=$CONAN_PROFILE
    - conan info ../conanfile.txt > CONAN_INFO

    - echo "Configuring with CMake"
    - |
      cmake \
      -DCONAN=MANUAL \
      -DGOOGLE_BENCHMARK=ON \
      -DCOV=ON \
      ..

    - make -j$(nproc) runtest
    - make -j$(nproc) runefu
    - make -j$(nproc) coverage
  artifacts:
    reports:
      junit: build/test_results/*.xml
      coverage_report:
        coverage_format: cobertura    
        path: build/coverage/coverage.xml

publish_tar_job:
  stage: publish
  image: alpine/curl:latest
  dependencies:
    - "build_job:centos7"
  artifacts: 
    paths:
      - event-formation-unit-centos7.tar.gz
  before_script:
    - curl -fL https://install-cli.jfrog.io | sh
    - jf config add $ESS_ARTIFACTORY_ID --url=$ESS_ARTIFACTORY_URL --user=$ESS_ARTIFACTORY_ECDC_USER --password=$ESS_ARTIFACTORY_ECDC_GENERIC_TOKEN
    - jf config show
  script:
    - mkdir -p archive/event-formation-unit
    - cp -r build/bin archive/event-formation-unit
    - cp -r build/generators archive/event-formation-unit
    - cp -r build/lib archive/event-formation-unit
    - cp -r build/licenses archive/event-formation-unit
    - mkdir archive/event-formation-unit/util
    - cp -r utils/efushell archive/event-formation-unit/util
    - mkdir archive/event-formation-unit/configs
    - mkdir archive/event-formation-unit/data
    - cp build/CONAN_INFO archive/event-formation-unit

    # - # Create file with build information
    - touch archive/event-formation-unit/BUILD_INFO
    - echo 'Repository replace_real_repo_name' >> archive/event-formation-unit/BUILD_INFO
    - echo 'Commit replace_git_commit' >> archive/event-formation-unit/BUILD_INFO
    - echo 'Jenkins build replace_build_id' >> archive/event-formation-unit/BUILD_INFO
    
    - tar czvf event-formation-unit-centos7.tar.gz -C archive event-formation-unit
    - jf rt u --build-name="event-formation-unit-centos7" --build-number=${CI_JOB_ID} event-formation-unit-centos7.tar.gz ecdc-generic-release/${ARTIFACTORY_UPLOAD_PATH}
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        ARTIFACTORY_UPLOAD_PATH: "${CI_PROJECT_NAME}/${CI_DEFAULT_BRANCH}/${CI_PIPELINE_IID}/"
    - if: $CI_COMMIT_TAG
      variables:
        ARTIFACTORY_UPLOAD_PATH: "${CI_PROJECT_NAME}/tags/${CI_COMMIT_TAG}/"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never


publish_docker_job:
  parallel: 
    matrix:
      - INSTRUMENT: "bifrost"
      - INSTRUMENT: "cbm"
      - INSTRUMENT: "cspec"
      - INSTRUMENT: "dream"
      - INSTRUMENT: "estia"
      - INSTRUMENT: "freia"
      - INSTRUMENT: "heimdal"
      - INSTRUMENT: "loki"
      - INSTRUMENT: "magic"
      - INSTRUMENT: "miracles"
      - INSTRUMENT: "nmx"
      - INSTRUMENT: "tbl3he"
      - INSTRUMENT: "timepix3"
      - INSTRUMENT: "trex"

  stage: publish
  image: docker:latest
  services:
    - docker:dind
  variables:
    IMAGE_NAME: "$CI_REGISTRY_IMAGE/efu-$INSTRUMENT"
  dependencies:
    - "build_job:almalinux9"
  script:
    - echo "Publishing docker image"
    - |
      docker login \
      -u "$CI_REGISTRY_USER" \
      -p "$CI_REGISTRY_PASSWORD" \
      "$CI_REGISTRY"

    - |
      docker build \
          --build-arg https_proxy="http://172.20.72.11:8888" \
          --build-arg http_proxy="http://172.20.72.11:8888" \
          --build-arg INSTRUMENT_NAME=$INSTRUMENT \
          -t "$IMAGE_NAME" \
          -f .ci/docker/Dockerfile.deploy .
    - docker push "$IMAGE_NAME"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
