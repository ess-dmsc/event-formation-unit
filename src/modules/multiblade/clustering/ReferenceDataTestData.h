

struct MBHits {
  float Time;
  float Channel;
  float AdcValue;
};

struct MBEvents {
  float y;
  float x;
  float time;
  float unused2;
  float unused3;
  float unused4;
  float unused5;
};

// Small reference dataset from Francesco Oct 2020
// 33 readouts, 10 events, 3 unmatched clusters
std::vector<struct MBHits> FPRefData {
  // Time (s)        Channel           ADC
  {9.1252640000e-03, 2.7000000000e+01, 2.1375000000e+04},
  {9.1254240000e-03, 2.8000000000e+01, 1.0315000000e+04},
  {9.1256320000e-03, 5.0000000000e+01, 5.8390000000e+03},
  {9.1258400000e-03, 4.9000000000e+01, 3.2740000000e+03},
  {9.1260960000e-03, 5.1000000000e+01, 1.9790000000e+03},
  {9.1588000000e-03, 1.0000000000e+01, 3.3407000000e+04},
  {9.1591200000e-03, 5.2000000000e+01, 8.6440000000e+03},
  {9.1593760000e-03, 5.1000000000e+01, 4.4420000000e+03},
  {9.1596320000e-03, 5.3000000000e+01, 2.4130000000e+03},
  {9.2895680000e-03, 1.8000000000e+01, 2.5456000000e+04},
  {9.2901120000e-03, 6.2000000000e+01, 4.1300000000e+03},
  {9.2902560000e-03, 6.1000000000e+01, 3.1590000000e+03},
  {9.4956480000e-03, 1.0000000000e+01, 2.4285000000e+04},
  {9.4960000000e-03, 6.0000000000e+01, 6.7930000000e+03},
  {9.4963840000e-03, 5.9000000000e+01, 2.9680000000e+03},
  {9.6056640000e-03, 1.0000000000e+00, 6.0840000000e+03},
  {9.7041760000e-03, 0.0000000000e+00, 1.1635000000e+04},
  {9.9865280000e-03, 4.2000000000e+01, 1.7840000000e+03},
  {1.0124720000e-02, 2.4000000000e+01, 1.9147000000e+04},
  {1.0125296000e-02, 4.6000000000e+01, 3.1150000000e+03},
  {1.0217376000e-02, 2.4000000000e+01, 2.1500000000e+04},
  {1.0218272000e-02, 6.3000000000e+01, 2.1770000000e+03},
  {1.0253808000e-02, 2.5000000000e+01, 1.4624000000e+04},
  {1.0254560000e-02, 6.1000000000e+01, 2.0910000000e+03},
  {1.0285024000e-02, 1.3000000000e+01, 2.7029000000e+04},
  {1.0285440000e-02, 4.2000000000e+01, 5.6720000000e+03},
  {1.0285872000e-02, 4.1000000000e+01, 2.4110000000e+03},
  {1.0286032000e-02, 4.3000000000e+01, 1.6460000000e+03},
  {1.0379984000e-02, 1.4000000000e+01, 3.2236000000e+04},
  {1.0380480000e-02, 3.3000000000e+01, 4.7520000000e+03},
  {1.0380640000e-02, 3.4000000000e+01, 3.1970000000e+03},
  {1.0454736000e-02, 7.0000000000e+00, 1.1311000000e+04},
  {1.0455744000e-02, 3.2000000000e+01, 1.5170000000e+03}
};


std::vector<struct MBHits> DS2S_ST_FF {
  {2.1077632000e-02, 1.1000000000e+01, 2.1548000000e+04},
  {2.1077920000e-02, 4.2000000000e+01, 6.8710000000e+03},
  {2.1078176000e-02, 4.3000000000e+01, 3.7770000000e+03},
  {2.1078960000e-02, 4.1000000000e+01, 6.7800000000e+02},
  {2.2498512000e-02, 5.0000000000e+00, 2.8075000000e+04},
  {2.2498944000e-02, 4.4000000000e+01, 5.2690000000e+03},
  {2.2499056000e-02, 4.5000000000e+01, 3.1070000000e+03},
  {2.2766480000e-02, 2.9000000000e+01, 1.7059000000e+04},
  {2.2767072000e-02, 4.5000000000e+01, 2.9930000000e+03},
  {2.3929952000e-02, 6.0000000000e+00, 3.3579000000e+04},
  {2.3930352000e-02, 4.5000000000e+01, 6.1020000000e+03},
  {2.3930464000e-02, 4.6000000000e+01, 4.7780000000e+03},
  {2.4011136000e-02, 5.0000000000e+00, 9.5980000000e+03},
  {2.4011904000e-02, 4.2000000000e+01, 1.3670000000e+03},
  {2.5727728000e-02, 2.3000000000e+01, 1.7122000000e+04},
  {2.5728464000e-02, 5.0000000000e+01, 2.6510000000e+03},
  {2.6848656000e-02, 9.0000000000e+00, 1.1513000000e+04},
  {2.6849744000e-02, 4.4000000000e+01, 9.7900000000e+02},
  {2.6961408000e-02, 7.0000000000e+00, 1.0931000000e+04},
  {2.6962496000e-02, 4.6000000000e+01, 9.2400000000e+02},
  {3.4182368000e-02, 1.0000000000e+01, 2.0345000000e+04},
  {3.4182960000e-02, 5.0000000000e+01, 3.4160000000e+03},
  {3.4183344000e-02, 4.9000000000e+01, 1.5620000000e+03},
  {3.9423904000e-02, 1.5000000000e+01, 6.9060000000e+03},
  {3.9481104000e-02, 1.0000000000e+01, 2.6541000000e+04},
  {3.9481504000e-02, 4.8000000000e+01, 5.1480000000e+03},
  {3.9481936000e-02, 4.9000000000e+01, 2.1570000000e+03},
  {4.1635056000e-02, 2.7000000000e+01, 1.1110000000e+04},
  {4.9476944000e-02, 2.4000000000e+01, 2.4546000000e+04}
};

std::vector<struct MBEvents> DS2S_ST_FF_Res {
  {1.1000000000e+01, 1.0270000000e+01, 2.1078000000e-02, 2.1548000000e+04, 1.1326000000e+04, 1.0000000000e+00, 3.0000000000e+00},
  {5.0000000000e+00, 1.2370000000e+01, 2.2499000000e-02, 2.8075000000e+04, 8.3760000000e+03, 1.0000000000e+00, 2.0000000000e+00},
  {2.9000000000e+01, 1.3000000000e+01, 2.2766000000e-02, 1.7059000000e+04, 2.9930000000e+03, 1.0000000000e+00, 1.0000000000e+00},
  {6.0000000000e+00, 1.3440000000e+01, 2.3930000000e-02, 3.3579000000e+04, 1.0880000000e+04, 1.0000000000e+00, 2.0000000000e+00},
  {5.0000000000e+00, 1.0000000000e+01, 2.4011000000e-02, 9.5980000000e+03, 1.3670000000e+03, 1.0000000000e+00, 1.0000000000e+00},
  {2.3000000000e+01, 1.8000000000e+01, 2.5728000000e-02, 1.7122000000e+04, 2.6510000000e+03, 1.0000000000e+00, 1.0000000000e+00},
  {9.0000000000e+00, 1.2000000000e+01, 2.6849000000e-02, 1.1513000000e+04, 9.7900000000e+02, 1.0000000000e+00, 1.0000000000e+00},
  {7.0000000000e+00, 1.4000000000e+01, 2.6961000000e-02, 1.0931000000e+04, 9.2400000000e+02, 1.0000000000e+00, 1.0000000000e+00},
  {1.0000000000e+01, 1.7690000000e+01, 3.4182000000e-02, 2.0345000000e+04, 4.9780000000e+03, 1.0000000000e+00, 2.0000000000e+00},
  {1.0000000000e+01, 1.6300000000e+01, 3.9481000000e-02, 2.6541000000e+04, 7.3050000000e+03, 1.0000000000e+00, 2.0000000000e+00}

};

#ifdef HAS_REFDATA

#ifdef INCLUDE_LARGE_DATA
#ifdef INCLUDE_DS1
// Large dataset1 sorted but unfiltered
// Sorted, not filtered
std::vector<struct MBHits> DS1L_ST_FF {
#include <dataset1_large_ST_FF_Input.txt>
};
std::vector<struct MBEvents> DS1L_ST_FF_Res {
#include <dataset1_large_ST_FF_Clustered.txt>
};

#ifdef INCLUDE_UNSORTED
// Not sorted, not filtered
std::vector<struct MBHits> DS1L_SF_FF {
#include <dataset1_large_SF_FF_Input.txt>
};
std::vector<struct MBEvents> DS1L_SF_FF_Res {
#include <dataset1_large_SF_FF_Clustered.txt>
};
#endif
#endif // DS1


#ifdef INCLUDE_DS2
// Large dataset 2
// Not sorted, not filtered
std::vector<struct MBHits> DS2L_ST_FF {
#include <dataset2_large_ST_FF_Input.txt>
};
std::vector<struct MBEvents> DS2L_ST_FF_Res {
#include <dataset2_large_ST_FF_Clustered.txt>
};

#ifdef INCLUDE_UNSORTED
std::vector<struct MBHits> DS2L_SF_FF {
#include <dataset2_large_SF_FF_Input.txt>
};
std::vector<struct MBEvents> DS2L_SF_FF_Res {
#include <dataset2_large_SF_FF_Clustered.txt>
};
#endif // unsorted

#endif // DS2
#endif // large
#endif // HAS_REFDATA
