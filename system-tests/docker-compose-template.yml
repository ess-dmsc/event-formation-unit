version: '2'

services:
  kafka:
    image: wurstmeister/kafka:2.12-2.1.0
    depends_on:
      - zookeeper
    hostname: kafka
    ports:
      - "9094:9094"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.4
    environment:
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 20000000
      KAFKA_BROKER_ID: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: zookeeper:3.4
    networks:
      vpcbr:
        ipv4_address: 10.5.0.3

  efu:
    image: event-formation-unit:latest
    depends_on:
      - kafka
    environment:
      EXECUTABLE: efu
      OPT_ARGS: -d ./efu/modules/mbcaen.so -f /MB18Freia.json -b kafka --nohwcheck
    hostname: efu
    volumes:
      - JSON_DATA_PATH/MB18Freia.json:/MB18Freia.json
    ports:
      - "8889:8888" # So can query efu stats on localhost:8889
    networks:
      vpcbr:
        ipv4_address: 10.5.0.5 # Have to specify ip address, udpgen_pcap doesn't like using hostname to publish to

  efu-udpgen:
    image: event-formation-unit:latest
    depends_on:
      - efu
    environment:
      EXECUTABLE: udpgen_pcap
      OPT_ARGS: --file /ess2_ess_mask.pcap --throttle 2000 --ip 10.5.0.5 --port 9000
    volumes:
      - PCAP_DATA_PATH/ess2_ess_mask.pcap:/ess2_ess_mask.pcap
    networks:
      vpcbr:
        ipv4_address: 10.5.0.6

networks:
  vpcbr:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1
