

function(add_linker_flags target flags)
    get_target_property(cur_link_flags ${target} LINK_FLAGS)
    if(NOT cur_link_flags)
        set(cur_link_flags "")
    endif()
    set(new_link_flags "${cur_link_flags} ${flags}")
    set_target_properties(${target} PROPERTIES LINK_FLAGS "${new_link_flags}")
endfunction(add_linker_flags)

function(add_compile_flags target flags)
    get_target_property(cur_compile_flags ${target} COMPILE_FLAGS)
    if(NOT cur_compile_flags)
        set(cur_compile_flags "")
    endif()
    set(new_compile_flags "${cur_compile_flags} ${flags}")
    set_target_properties(${target} PROPERTIES COMPILE_FLAGS "${new_compile_flags}")
endfunction(add_compile_flags)


set(coverage_targets "")
set(unit_test_targets "")
function(create_test_executable exec_name link_libraries)
    add_executable(${exec_name} EXCLUDE_FROM_ALL ${${exec_name}_SRC} ${${exec_name}_INC} )
    target_include_directories(${exec_name} PRIVATE ${GTEST_INCLUDE_DIRS})
    target_link_libraries(${exec_name} ${link_libraries} ${GTEST_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
    set_target_properties(${exec_name} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/unit_tests")
    if(DO_COV)
        set_target_properties(${exec_name} PROPERTIES LINK_FLAGS "-coverage -fprofile-generate")
        set_target_properties(${exec_name} PROPERTIES COMPILE_FLAGS "-g -O0 -coverage -fprofile-generate")
        #SETUP_TARGET_FOR_COVERAGE(${exec_name}_coverage ${exec_name} coverage/${exec_name}/)
        SETUP_TARGET_FOR_COVERAGE_COBERTURA(${exec_name}_coverage ${exec_name} coverage/${exec_name})
        set(coverage_targets ${exec_name}_coverage ${coverage_targets} PARENT_SCOPE)
    endif()
    add_test(NAME regular_${exec_name} COMMAND ${exec_name} "--gtest_output=xml:${CMAKE_BINARY_DIR}/test_results/${exec_name}test.xml")
    set(unit_test_targets ${exec_name} ${unit_test_targets} PARENT_SCOPE)
    if (EXISTS ${VALGRIND_CMD})
        add_test(NAME memcheck_${exec_name} COMMAND ${VALGRIND_CMD} --leak-check=full -v --log-file=${CMAKE_BINARY_DIR}/memcheck_res/${exec_name}test.valgrind ${CMAKE_BINARY_DIR}/unit_tests/${exec_name})
    endif()
endfunction(create_test_executable)


FUNCTION(PREPEND var prefix)
   SET(listVar "")
   FOREACH(f ${${var}})
      LIST(APPEND listVar "${prefix}/${f}")
   ENDFOREACH(f)
   SET(${var} "${listVar}" PARENT_SCOPE)
ENDFUNCTION(PREPEND)
