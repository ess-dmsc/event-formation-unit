# Copyright (C) 2016 European Spallation Source ERIC
#

testprogs = DetectorTest CSPECDataTest CSPECChanConvTest RingBufferTest CSPECEventTest MultiGridGeometryTest ParserTest EFUArgsTest

test: $(testprogs)
	@echo "done building tests"

runtest: test
	$(Q)for test in $(testprogs) ; do ./$$test --gtest_output=xml:$$test.xml ; done

CSPECChanConvTest: test/CSPECChanConvTest.cpp cspec/CSPECChanConv.cpp cspec/CSPECChanConv.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) test/CSPECChanConvTest.cpp cspec/CSPECChanConv.cpp -o $@ $(ldflags_test)

CSPECDataTest:  test/CSPECDataTest.cpp cspec/CSPECData.cpp cspec/CSPECChanConv.cpp cspec/CSPECData.h cspec/CSPECChanConv.h test/CSPECTestData.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) test/CSPECDataTest.cpp cspec/CSPECData.cpp cspec/CSPECChanConv.cpp -o $@ $(ldflags_test)

RingBufferTest: test/RingBufferTest.cpp common/RingBuffer.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) test/RingBufferTest.cpp -o $@ $(ldflags_test)

DetectorTest: test/DetectorTest.cpp common/Detector.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) test/DetectorTest.cpp  -o $@ $(ldflags_test)

CSPECEventTest: test/CSPECEventTest.cpp cspec/CSPECEvent.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) test/CSPECEventTest.cpp  -o $@ $(ldflags_test)

MultiGridGeometryTest: test/MultiGridGeometryTest.cpp common/MultiGridGeometry.h libs/include/TSCTimer.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) test/MultiGridGeometryTest.cpp $(library)  -o $@ $(ldflags_test)

ParserTest: test/ParserTest.cpp efu/Parser.cpp common/EFUArgs.cpp efu/Parser.h common/EFUArgs.h
		@echo building $@
		$(Q)g++ $(cxxflags_test) test/ParserTest.cpp efu/Parser.cpp common/EFUArgs.cpp $(library) -o $@ $(ldflags_test)

EFUArgsTest: test/EFUArgsTest.cpp common/EFUArgs.cpp  common/EFUArgs.h
				@echo building $@
				$(Q)g++ $(cxxflags_test) test/EFUArgsTest.cpp  common/EFUArgs.cpp $(library) -o $@ $(ldflags_test)

coverage:
	$(Q)gcov -r -b *.gcda
	$(Q)lcov -c -d . --no-external -o lcov.out
	$(Q)genhtml -o html lcov.out

valgrind: test
	$(Q)rm -f valgrind_error
	$(Q)for test in $(testprogs) ; do valgrind --leak-check=full -v --log-file="$$test.valgrind" ./$$test  || echo error >> valgrind_error; done
