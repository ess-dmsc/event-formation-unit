# Copyright (C) 2016 European Spallation Source ERIC
#

testprogs = DetectorTest CSPECDataTest CSPECChanConvTest RingBufferTest
testprogs += CSPECEventTest ParserTest EFUArgsTest CalibrationFileTest

testprogs += MultiGridGeometryTest EventletTest NewStatsTest EventTest
testprogs += NMXVMM2SRSDataTest ClustererTest TimeTest GeometryTest FBSerializerTest
testprogs += EventletBuilderH5Test EventletBuilderTest

test: $(testprogs)
	@echo "done building tests"

runtest: test
	$(Q)for test in $(testprogs) ; do ./$$test --gtest_output=xml:$$test.xml ; done

CSPECChanConvTest: cspec/CSPECChanConvTest.cpp cspec/CSPECChanConv.cpp cspec/CSPECChanConv.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) cspec/CSPECChanConvTest.cpp cspec/CSPECChanConv.cpp -o $@ $(ldflags_test)

CSPECDataTest:  cspec/CSPECDataTest.cpp cspec/CSPECData.cpp cspec/CSPECChanConv.cpp \
     cspec/CSPECData.h cspec/CSPECChanConv.h test/CSPECTestData.h \
     common/MultiGridGeometry.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) cspec/CSPECDataTest.cpp cspec/CSPECData.cpp cspec/CSPECChanConv.cpp -o $@ $(ldflags_test)

NMXVMM2SRSDataTest:  nmxvmm2srs/NMXVMM2SRSDataTest.cpp nmxvmm2srs/NMXVMM2SRSData.cpp nmxvmm2srs/NMXVMM2SRSData.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) nmxvmm2srs/NMXVMM2SRSDataTest.cpp nmxvmm2srs/NMXVMM2SRSData.cpp -o $@ $(ldflags_test)

RingBufferTest: common/RingBufferTest.cpp common/RingBuffer.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) common/RingBufferTest.cpp -o $@ $(ldflags_test)

DetectorTest: common/DetectorTest.cpp common/Detector.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) common/DetectorTest.cpp  -o $@ $(ldflags_test)

CSPECEventTest: cspec/CSPECEventTest.cpp cspec/CSPECEvent.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) cspec/CSPECEventTest.cpp  -o $@ $(ldflags_test)

MultiGridGeometryTest: common/MultiGridGeometryTest.cpp common/MultiGridGeometry.h libs/include/TSCTimer.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) common/MultiGridGeometryTest.cpp $(library)  -o $@ $(ldflags_test)

ParserTest: efu/ParserTest.cpp test/SyscallWrappers.cpp efu/Parser.cpp \
	common/EFUArgs.cpp cspec/CalibrationFile.cpp efu/Parser.h \
	common/EFUArgs.h cspec/CalibrationFile.h
	@echo building $@
	$(Q)g++ -Wl,--wrap=fstat,--wrap=read,--wrap=write,--wrap=open -c  $(cxxflags_test) -std=c++11 -I . \
				-I .. test/SyscallWrappers.cpp efu/ParserTest.cpp efu/Parser.cpp \
				common/EFUArgs.cpp cspec/CalibrationFile.cpp
	$(Q)g++ -Wl,--wrap=fstat,--wrap=read,--wrap=write,--wrap=open SyscallWrappers.o ParserTest.o Parser.o \
				CalibrationFile.o EFUArgs.o $(library) -o $@ $(ldflags_test)

CalibrationFileTest: cspec/CalibrationFileTest.cpp cspec/CalibrationFile.cpp\
	cspec/CalibrationFile.h
	@echo building $@
	$(Q)g++ -Wl,--wrap=fstat,--wrap=read,--wrap=write,--wrap=open -c  $(cxxflags_test) -std=c++11 -I . \
					-I .. test/SyscallWrappers.cpp \
					cspec/CalibrationFileTest.cpp cspec/CalibrationFile.cpp
	$(Q)g++ -Wl,--wrap=fstat,--wrap=read,--wrap=write,--wrap=open SyscallWrappers.o \
					CalibrationFile.o CalibrationFileTest.o $(library) -o $@ $(ldflags_test)

EFUArgsTest: common/EFUArgsTest.cpp common/EFUArgs.cpp common/EFUArgs.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) common/EFUArgsTest.cpp  common/EFUArgs.cpp $(library) -o $@ $(ldflags_test)

NewStatsTest: common/NewStatsTest.cpp common/NewStats.cpp common/NewStats.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) common/NewStatsTest.cpp  common/NewStats.cpp $(library) -o $@ $(ldflags_test)

EventletTest: NMX/EventletTest.cpp NMX/Eventlet.cpp NMX/Eventlet.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) NMX/EventletTest.cpp  NMX/Eventlet.cpp $(library) -o $@ $(ldflags_test)

EventTest: NMX/EventTest.cpp NMX/EventNMX.cpp NMX/EventNMX.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) NMX/EventTest.cpp NMX/EventNMX.cpp $(library) -o $@ $(ldflags_test)

ClustererTest: NMX/ClustererTest.cpp NMX/Clusterer.cpp NMX/Clusterer.h NMX/EventNMX.cpp NMX/EventNMX.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) NMX/ClustererTest.cpp NMX/EventNMX.cpp NMX/Clusterer.cpp $(library) -o $@ $(ldflags_test)

TimeTest: NMX/TimeTest.cpp NMX/Time.cpp NMX/Time.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) NMX/TimeTest.cpp NMX/Time.cpp $(library) -o $@ $(ldflags_test)

GeometryTest: NMX/GeometryTest.cpp NMX/Geometry.cpp NMX/Geometry.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) NMX/GeometryTest.cpp NMX/Geometry.cpp $(library) -o $@ $(ldflags_test)

EventletBuilderH5Test: nmxgen/EventletBuilderH5Test.cpp nmxgen/EventletBuilderH5.cpp nmxgen/EventletBuilderH5.h NMX/Clusterer.cpp NMX/Clusterer.h NMX/EventNMX.cpp NMX/EventNMX.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) nmxgen/EventletBuilderH5Test.cpp nmxgen/EventletBuilderH5.cpp NMX/Clusterer.cpp NMX/EventNMX.cpp $(library) -o $@ $(ldflags_test)

EventletBuilderTest: nmxvmm2srs/EventletBuilderTest.cpp nmxvmm2srs/EventletBuilder.cpp nmxvmm2srs/EventletBuilder.h NMX/Clusterer.cpp NMX/Clusterer.h NMX/EventNMX.cpp NMX/EventNMX.h NMX/Time.cpp NMX/Time.h NMX/Geometry.cpp NMX/Geometry.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) nmxvmm2srs/EventletBuilderTest.cpp nmxvmm2srs/EventletBuilder.cpp NMX/Clusterer.cpp NMX/EventNMX.cpp NMX/Time.cpp NMX/Geometry.cpp $(library) -o $@ $(ldflags_test)


# common/

FBSerializerTest: common/FBSerializerTest.cpp common/FBSerializer.cpp common/FBSerializer.h
	@echo building $@
	$(Q)g++ $(cxxflags_test) common/FBSerializerTest.cpp common/FBSerializer.cpp $(library) -o $@ $(ldflags_test)

coverage:
	$(Q)gcov -r -b -c *.gcda
	$(Q)lcov --rc lcov_branch_coverage=1 -c -d . --no-external -o lcov.out
	$(Q)genhtml --branch-coverage -o html lcov.out

valgrind: test
	$(Q)rm -f valgrind_error
	$(Q)for test in $(testprogs) ; do valgrind --leak-check=full -v --log-file="$$test.valgrind" ./$$test  || echo error >> valgrind_error; done
