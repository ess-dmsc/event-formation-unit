networks:
  efu:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.20.30.0/24
          gateway: 10.20.30.1
    driver_opts:
      com.docker.network.driver.mtu: 9000

services:
  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    container_name: kafka1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093"
      KAFKA_LISTENERS: "CONTROLLER://kafka1:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT"
      KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN"
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: "PLAIN"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "abcde"
      # Log cleanup configurations with adjusted value
      KAFKA_LOG_RETENTION_HOURS: 48          # Retain logs for 7 days
      KAFKA_LOG_RETENTION_BYTES: 10737418240  # Retain up to 10 GB per topic partition
      KAFKA_LOG_SEGMENT_BYTES: 1073741824     # Segment size of 1 GB (within INT limit)
      KAFKA_LOG_CLEANUP_POLICY: "delete"      # Set cleanup policy to delete old logs
    restart: always
    networks:
      - efu

  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka2
    container_name: kafka2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: "broker"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093"
      KAFKA_LISTENERS: "PLAINTEXT://kafka2:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka2:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN"
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: "PLAIN"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CLUSTER_ID: "abcde"
      # Log cleanup configurations with adjusted value
      KAFKA_LOG_RETENTION_HOURS: 48          # Retain logs for 7 days
      KAFKA_LOG_RETENTION_BYTES: 10737418240  # Retain up to 10 GB per topic partition
      KAFKA_LOG_SEGMENT_BYTES: 1073741824     # Segment size of 1 GB (within INT limit)
      KAFKA_LOG_CLEANUP_POLICY: "delete"      # Set cleanup policy to delete old logs
    restart: always
    networks:
      - efu

  graphite:
    image: graphiteapp/graphite-statsd
    container_name: graphite
    ports:
      - "8081:80"
    restart: always
    networks:
      - efu

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "8080:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ../../../grafana/provisioning:/etc/grafana/provisioning
      - ../../../grafana/dashboards/docker-efu-instrument-view.json:/var/lib/grafana/dashboards/docker-efu-instrument-view.json # EFU dashboard file
    depends_on:
      - graphite
    restart: always
    networks:
      - efu

  efu-dream-bwec:
    image: registry.esss.lu.se/ecdc/ess-dmsc/event-formation-unit/efu-dream:latest
    hostname: efu-dream-bwec
    container_name: efu-dream-bwec
    depends_on:
      - kafka2
      - kafka1
      - graphite
    ports:
      - "9001:9000/udp"
      - "8889:8888/tcp"
    networks:
      - efu
    volumes:
      # Please replace <essconfig_path> with the path to your local essconfig directory
      # and <instrument_name> with the name of the instrument
      - ./efu-config:/ess/ecdc/event_formation_unit/config/
    environment:
      - BROKER_TOPIC=dream_detector_bwec
      - FILE=dream_bwec.json
      - REGION=bwec
      # - CALIBRATION=cspecnullcalib.json
      - BROKER_ADDR=kafka2:9092
      - GRAPHITE=graphite
    restart: always

  efu-dream-fwec:
    image: registry.esss.lu.se/ecdc/ess-dmsc/event-formation-unit/efu-dream:latest
    hostname: efu-dream-fwec
    container_name: efu-dream-fwec
    depends_on:
      - kafka2
      - kafka1
      - graphite
    ports:
      - "9002:9000/udp"
      - "8890:8888/tcp"
    networks:
      - efu
    volumes:
      # Please replace <essconfig_path> with the path to your local essconfig directory
      # and <instrument_name> with the name of the instrument
      - ./efu-config:/ess/ecdc/event_formation_unit/config/
    environment:
      - BROKER_TOPIC=dream_detector_fwec
      - FILE=dream_fwec.json
      - REGION=fwec
      # - CALIBRATION=cspecnullcalib.json
      - BROKER_ADDR=kafka2:9092
      - GRAPHITE=graphite
    restart: always

  efu-dream-hr:
    image: registry.esss.lu.se/ecdc/ess-dmsc/event-formation-unit/efu-dream:latest
    hostname: efu-dream-hr
    container_name: efu-dream-hr
    depends_on:
      - kafka2
      - kafka1
      - graphite
    ports:
      - "9003:9000/udp"
      - "8891:8888/tcp"
    networks:
      - efu
    volumes:
      # Please replace <essconfig_path> with the path to your local essconfig directory
      # and <instrument_name> with the name of the instrument
      - ./efu-config:/ess/ecdc/event_formation_unit/config/
    environment:
      - BROKER_TOPIC=dream_detector_hr
      - FILE=dream_hr.json
      - REGION=hr
      # - CALIBRATION=cspecnullcalib.json
      - BROKER_ADDR=kafka2:9092
      - GRAPHITE=graphite
    restart: always

  efu-dream-mantle:
    image: registry.esss.lu.se/ecdc/ess-dmsc/event-formation-unit/efu-dream:latest
    hostname: efu-dream-mantle
    container_name: efu-dream-mantle
    depends_on:
      - kafka2
      - kafka1
      - graphite
    ports:
      - "9004:9000/udp"
      - "8892:8888/tcp"
    networks:
      - efu
    volumes:
      # Please replace <essconfig_path> with the path to your local essconfig directory
      # and <instrument_name> with the name of the instrument
      - ./efu-config:/ess/ecdc/event_formation_unit/config/
    environment:
      - BROKER_TOPIC=dream_detector_mantle
      - FILE=dream_mantle.json
      - REGION=mantle
      # - CALIBRATION=cspecnullcalib.json
      - BROKER_ADDR=kafka2:9092
      - GRAPHITE=graphite
    restart: always

  efu-dream-sans:
    image: registry.esss.lu.se/ecdc/ess-dmsc/event-formation-unit/efu-dream:latest
    hostname: efu-dream-sans
    container_name: efu-dream-sans
    depends_on:
      - kafka2
      - kafka1
      - graphite
    ports:
      - "9005:9000/udp"
      - "8893:8888/tcp"
    networks:
      - efu
    volumes:
      # Please replace <essconfig_path> with the path to your local essconfig directory
      # and <instrument_name> with the name of the instrument
      - ./efu-config:/ess/ecdc/event_formation_unit/config/
    environment:
      - BROKER_TOPIC=dream_detector_sans
      - FILE=dream_sans.json
      - REGION=sans
      # - CALIBRATION=cspecnullcalib.json
      - BROKER_ADDR=kafka2:9092
      - GRAPHITE=graphite
    restart: always

  efu-cbm:
    image: registry.esss.lu.se/ecdc/ess-dmsc/event-formation-unit/efu-cbm:latest
    hostname: efu-cbm
    container_name: efu-cbm
    depends_on:
      - kafka2
      - kafka1
      - graphite
    ports:
      - "9010:9000/udp"
      - "8899:8888/tcp"
    networks:
      - efu
    volumes:
      - ./efu-config:/ess/ecdc/event_formation_unit/config/
    environment:
      - BROKER_TOPIC=beam_monitor
      - FILE=cbm_ibm.json
      - REGION=cbm
      - BROKER_ADDR=kafka2:9092
      - GRAPHITE=graphite
    restart: always

  daqlite:
    image: registry.esss.lu.se/ecdc/ess-dmsc/daqlite:latest
    container_name: daqlite
    depends_on:
      - kafka2
      - kafka1
    ports:
      - "5901:5901"
    environment:
      - DAQLITE_BROKER=-b kafka2:9092
      - DAQLITE_PRODUCTION=true
      # Please replace <vnc_password> with the password you want to use
      - VNC_PASSWORD=<vnc_password> # password for VNC
      - VNC_RESOLUTION=1280x800 # Increase resolution for better view
    restart: always
    networks:
      - efu

  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    depends_on:
      - kafka2
      - kafka1
    ports:
      - "8082:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka:
              properties:
                bootstrap.servers: "kafka2:9092"
                security.protocol: PLAINTEXT
                sasl.mechanism: PLAIN
    restart: always
    networks:
      - efu
