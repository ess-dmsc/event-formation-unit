#!/usr/bin/python

#      | gap               | P1  | gap     | P2| gap           | P3     |  gap       |
hist = [0,0,0,0,0,0,0,0,0,0,1,5,2,0,0,0,0,0,2,8,0,0,0,0,1,0,0,0,3,7,0,1,0,0,0,0,0,0,0]
#       0         5        10        15        20        25        30        35

data

def deb(string):
    #print string
    pass

def findpeaks(H, minwidth, noise):
    stgap=1
    stinpeak=2

    state=stgap
    peaks = []
    for i in range(len(H)):
        if H[i] <= noise:
            H[i] = 0
        val = H[i]

        if state == stgap:
            if val == 0:
                state = stgap
                deb("%d, %d, stgap zero, no change." % (i, val))
                continue
            else:
                pkstart = i
                state = stinpeak
                deb("%d, %d, stgap nonzero value, peak start %d - stgap -> stinpeak" % (i, val, pkstart))
                continue
        elif state == stinpeak:
            if val == 0:
                if H[i + 1] != 0:
                    deb("%d, %d, stinpeak, zero with nz neighbors, no change" % (i, val))
                    continue
                pkend = i
                width = pkend - pkstart
                if  width >= minwidth or H[i - 1] > 1:
                    deb("%d, %d, stinpeak zero, peak found, width %d - stinpeak -> stgap" % (i, val, pkend - pkstart))
                    #print("peak %s start %d, end %d" % (peaks, pkstart, pkend-1))
                    peaks.append([pkstart, pkend])
                    gend = pkstart - 1
                    state = stgap
                else:
                    deb("%d, %d, stinpeak zero, peak too narrow - stinpeak -> stgap" %(i, val))
                    state = stgap
                continue
            else:
                deb("%d, %d, state inpeak nonzero value, no change" % (i, val))
                continue
    return peaks

peaks = findpeaks(data, 2, 2)
width = []
gaps = []
print "number of peaks: ", len(peaks)
print "first peak start: ", min(peaks, key = lambda t: t[0])[0]
print "last peak end: ", max(peaks, key = lambda t: t[1])[1]
for x in peaks:
    width.append(x[1] - x[0])
print "min width: ", min(width)
print "max width: ", max(width)
for i in range(len(peaks)-1):
    w = peaks[i+1][0] - peaks[i][1]
    #print peaks[i], w
    gaps.append(w)
print "min gap: ", min(gaps)
print "max gap: ", max(gaps)
